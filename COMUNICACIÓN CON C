// Acontinuación le dejamos el código para la comunicación entre nuestro arduino y C.
//

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "SerialPort.h"
#include "SerialPort.C"
#define MAX_DATA_LENGTH 255

// Funciones prototipo
void autoConnect(SerialPort *arduino,char*);
int main(void)
{
    
    SerialPort *arduino;
    // Puerto serie en el que está Arduino
    char* portName = "\\\\.\\COM4";
    // Buffer para datos procedentes de Arduino
    char incomingData[MAX_DATA_LENGTH];
    // Crear estructura de datos del puerto serie
    arduino = (SerialPort *)malloc(sizeof(SerialPort));
    // Apertura del puerto serie
    Crear_Conexion(arduino,portName);
    autoConnect(arduino,incomingData);
    return 0;
}
void autoConnect(SerialPort *arduino,char *incomingData)
{
    char sendData = 0;
    int readResult;
    
    
    while (!isConnected(arduino))
    {
        Sleep(100);
        Crear_Conexion(arduino,arduino->portName);
    }
    
    
    if (isConnected(arduino))
    {
        printf ("Conectado con Arduino en el puerto %s\n",arduino->portName);
    }
    
    
    printf ("Encender - 1, Apagar - 0, Salir - 9. \n");
    while (isConnected(arduino) && sendData!='9')
    {
        sendData = getch();
        writeSerialPort(arduino,&sendData, sizeof(char));
        readResult=readSerialPort(arduino,incomingData,MAX_DATA_LENGTH);
        if (readResult!=0)
            printf ("%s",incomingData);
        sleep(10);
    }
    if (!isConnected(arduino))
        printf ("Se ha perdido la conexiÛn con Arduino\n");
}

// FIN DEL CÓDIGO DE COMUNICACIÓN CON ARDUINO.
